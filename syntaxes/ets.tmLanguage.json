{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ETS",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#decorators"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#types"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#classes"
		},
		{
			"include": "#interfaces"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#constants"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash.ets",
					"begin": "//",
					"end": "$"
				},
				{
					"name": "comment.block.ets",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"decorators": {
			"patterns": [
				{
					"name": "meta.decorator.ets",
					"match": "@(Component|Entry|State|Prop|Link|Provide|Consume|ObjectLink|Observed|Watch|Builder|Extend|Styles|CustomDialog|Preview|AnimatableExtend|Concurrent|Sendable|Track|Monitor|Require|LocalBuilder)\\b",
					"captures": {
						"1": {
							"name": "entity.name.function.decorator.ets"
						}
					}
				},
				{
					"name": "meta.decorator.ets",
					"match": "@[a-zA-Z_][a-zA-Z0-9_]*",
					"captures": {
						"0": {
							"name": "entity.name.function.decorator.ets"
						}
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.ets",
					"match": "\\b(if|else|while|for|do|switch|case|default|break|continue|return|try|catch|finally|throw|async|await|yield)\\b"
				},
				{
					"name": "keyword.operator.ets",
					"match": "\\b(new|delete|typeof|instanceof|in|of)\\b"
				},
				{
					"name": "keyword.other.ets",
					"match": "\\b(var|let|const|function|class|interface|enum|type|namespace|module|import|export|from|as|default|extends|implements|public|private|protected|static|readonly|abstract|declare|get|set)\\b"
				},
				{
					"name": "constant.language.ets",
					"match": "\\b(true|false|null|undefined|this|super)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "support.type.primitive.ets",
					"match": "\\b(string|number|boolean|object|any|void|never|unknown|bigint|symbol)\\b"
				},
				{
					"name": "support.type.ets",
					"match": "\\b(Array|Object|Function|Date|RegExp|Error|Promise|Map|Set|WeakMap|WeakSet)\\b"
				},
				{
					"name": "support.type.arkui.ets",
					"match": "\\b(Column|Row|Stack|Flex|Text|Button|Image|TextInput|Scroll|List|Grid|Swiper|Tabs|Navigation|Page|Router|Resource|Length|Color|FontWeight|FontStyle|TextAlign|Visibility|FlexDirection|FlexWrap|JustifyContent|AlignItems|AlignContent|BorderStyle|ImageFit|ObjectFit|Axis|ScrollDirection|EdgeEffect|NestedScrollMode|SwiperDisplayMode|TabBarMode|NavigationMode|AnimationStatus|Curve|FillMode|PlayMode|FinishCallbackType|SlideEffect|TransitionType|SharedTransitionEffectType|ChainAnimationOptions|KeyframeAnimationOptions|AnimationRange|ExpectedFrameRateRange)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.ets",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.ets",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.ets",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.ets",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.template.ets",
					"begin": "`",
					"end": "`",
					"patterns": [
						{
							"name": "meta.template.expression.ets",
							"begin": "\\$\\{",
							"end": "\\}",
							"patterns": [
								{
									"include": "$self"
								}
							]
						},
						{
							"name": "constant.character.escape.ets",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.hex.ets",
					"match": "\\b0[xX][0-9a-fA-F]+\\b"
				},
				{
					"name": "constant.numeric.binary.ets",
					"match": "\\b0[bB][01]+\\b"
				},
				{
					"name": "constant.numeric.octal.ets",
					"match": "\\b0[oO][0-7]+\\b"
				},
				{
					"name": "constant.numeric.decimal.ets",
					"match": "\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.ets",
					"match": "=|\\+=|-=|\\*=|/=|%=|\\*\\*=|<<=|>>=|>>>=|&=|\\|=|\\^="
				},
				{
					"name": "keyword.operator.comparison.ets",
					"match": "==|!=|===|!==|<|>|<=|>=|<=>|\\?\\?"
				},
				{
					"name": "keyword.operator.logical.ets",
					"match": "&&|\\|\\||!"
				},
				{
					"name": "keyword.operator.arithmetic.ets",
					"match": "\\+|-|\\*|/|%|\\*\\*|\\+\\+|--"
				},
				{
					"name": "keyword.operator.bitwise.ets",
					"match": "&|\\||\\^|~|<<|>>|>>>"
				},
				{
					"name": "keyword.operator.ternary.ets",
					"match": "\\?|:"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "meta.function.ets",
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()",
					"captures": {
						"1": {
							"name": "entity.name.function.ets"
						}
					}
				}
			]
		},
		"classes": {
			"patterns": [
				{
					"name": "meta.class.ets",
					"match": "\\b(class)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
					"captures": {
						"1": {
							"name": "keyword.other.ets"
						},
						"2": {
							"name": "entity.name.class.ets"
						}
					}
				}
			]
		},
		"interfaces": {
			"patterns": [
				{
					"name": "meta.interface.ets",
					"match": "\\b(interface)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
					"captures": {
						"1": {
							"name": "keyword.other.ets"
						},
						"2": {
							"name": "entity.name.interface.ets"
						}
					}
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.ets",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.other.ets",
					"match": "\\b[A-Z][A-Z0-9_]*\\b"
				}
			]
		}
	},
	"scopeName": "source.ets"
}